<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.microservices</groupId>
        <version>1.0.0</version>
        <artifactId>parent</artifactId>
    </parent>
    <groupId>com.security.oauth.service</groupId>
    <artifactId>security-oauth-service</artifactId>
    <version>0.0.1</version>
    <name>security-oauth-service</name>
    <description>Service related with security functionality based on Oauth2 with Jwt</description>

    <properties>
        <java.version>1.11</java.version>
        <cache2k.version>1.2.4.Final</cache2k.version>
        <hamcrest.version>2.1</hamcrest.version>
        <spring-security-jwt.version>1.0.10.RELEASE</spring-security-jwt.version>
        <spring-security-oauth2.version>2.3.6.RELEASE</spring-security-oauth2.version>
        <common.version>0.0.2</common.version>
        <docker.image.exposed.port>8889</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
    </properties>

    <dependencies>
        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-rsa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>${spring-security-oauth2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>${spring-security-jwt.version}</version>
        </dependency>
        <!-- Spring5 microservices common -->
        <dependency>
            <groupId>com.common</groupId>
            <artifactId>common</artifactId>
            <version>${common.version}</version>
        </dependency>
        <!-- Database related -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- Code generators -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Cache -->
        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-api</artifactId>
            <version>${cache2k.version}</version>
        </dependency>
        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-core</artifactId>
            <version>${cache2k.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.cache2k</groupId>
            <artifactId>cache2k-spring</artifactId>
            <version>${cache2k.version}</version>
        </dependency>
        <!-- Required if we are using JDK >= 9 to avoid:
                java.lang.ClassNotFoundException: com.sun.xml.internal.bind.v2.ContextFactory -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>buildDocker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
